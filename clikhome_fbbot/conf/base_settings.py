"""
Django settings for fbbot project.

Generated by 'django-admin startproject' using Django 1.8.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import dj_database_url

BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'z5)x94svu#kukwsp17(0(d6e!bnt$y=$*0!toyrx7tqqrij)&y')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    # 'django.contrib.admin',
    # 'django.contrib.auth',
    # 'django.contrib.contenttypes',
    # 'django.contrib.sessions',
    # 'django.contrib.messages',
    # 'django.contrib.staticfiles',

    'raven.contrib.django.raven_compat',
    'django_extensions',
    'djcelery',
    # 'kombu.transport.django',

    'fb_bot',
)

MIDDLEWARE_CLASSES = (
    # 'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    # 'django.contrib.auth.middleware.AuthenticationMiddleware',
    # 'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    # 'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'clikhome_fbbot.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'clikhome_fbbot.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = dict()
DATABASES['default'] = dj_database_url.config()
DATABASES['default']['ATOMIC_REQUESTS'] = True
# DATABASES['default']['ENGINE'] = 'django.contrib.gis.db.backends.postgis'

REDIS_URL = os.getenv('REDIS_URL', os.getenv('REDISCLOUD_URL', 'redis://localhost:6379'))

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': REDIS_URL,
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        }
    }
}

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

# Logging
from clikhome_fbbot.conf.logging_conf import LOGGING
if os.environ.get('SENTRY_DSN', None):
    RAVEN_CONFIG = {
        'dsn': os.environ.get('SENTRY_DSN'),
        # If you are using git, you can also automatically configure the
        # release based on the git info.
        # 'release': raven.fetch_git_sha(root()),
    }

# Celery
BROKER_URL = os.getenv('CELERY_BROKER_URL', None)
CELERY_RESULT_BACKEND = os.getenv('CELERY_RESULT_BACKEND_URL', None)

CELERY_TASK_RESULT_EXPIRES = 600
CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']
CELERY_RESULT_SERIALIZER = 'json'
CELERY_SEND_EVENTS = True

CELERYD_LOG_FORMAT = """
    [%(asctime)s: %(levelname)s/%(processName)s/%(threadName)s] %(message)s
""".strip()

if os.environ.get('DYNO', False):
    # Don't print %(asctime)s on Heroku environ
    CELERYD_LOG_FORMAT = """
        [%(levelname)s/%(processName)s/%(threadName)s] %(message)s
    """.strip()
# Facebook Messenger bot
FBBOT_PAGE_ACCESS_TOKEN = os.getenv('FBBOT_PAGE_ACCESS_TOKEN', None)
FBBOT_VERIFY_TOKEN = os.getenv('FBBOT_VERIFY_TOKEN', None)

